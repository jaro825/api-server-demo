openapi: 3.0.0
info:
  title: HTTP Server
  description: HTTP Server Demo
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /api/v1//user/{id}:
    get:
      summary: Get user
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of User
      description: Get user specified by ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                example:
                  id: "43ede838-9be1-40b3-86dc-4778b69aff54"
                  name: "jaro"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: '{"error":"user ID is not a valid UUID"}'
        '404':
          description: Not Found
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: '{"error":"could not get user"}'
  /api/v1//user:
    post:
      summary: Create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      description: Create new user
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                example:
                  id: "43ede838-9be1-40b3-86dc-4778b69aff54"
                  name: "jaro"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: '{"error":"user ID is not a valid UUID"}'
        '404':
          description: Not Found
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: '{"error":"could not create user"}'
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string